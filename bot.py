from ast import While
from asyncio.windows_events import NULL
from email import message
from pickle import TRUE
import re
#from tkinter.messagebox import YES
import aiogram
from attr import asdict
from django.conf import settings
import config
import asyncio
import time
import logging
import os, sys
from datetime import datetime
import aioschedule
from aiogram import Bot, Dispatcher, executor, types
from sqlighter import SQLighter
import aiogram.utils.markdown as md
from aiogram.utils.deep_linking import get_start_link
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ParseMode
from aiogram.utils import executor
# Configure logging
logging.basicConfig(level=logging.INFO)

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
bot = Bot(token=config.API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
db = SQLighter('db.db')

class Form(StatesGroup):
	BTCpay = State()
	CheckBTCpay = State()
	USDTpay = State()  
	CheckUSDTpay = State()
	BNBpay = State()
	CheckBNBpay = State()
	addWallet = State()
	Vivod = State()
	Nall_freez = State()
	passive = State()

number = 0
money = 0
usid = 0
stack = 0
wallet = 0
token_prise = 0.0025#za 1
token_priseUSDT = 50#za 20000 tokenov
check = TRUE
ADMIN = 685710474
def extract_unique_code(text):
    # Extracts the unique_code from the sent /start command.
    return text.split()[1] if len(text.split()) > 1 else None

@dp.message_handler(commands=['start'],state = None)
async def subscribe_from_start(message: types.Message):

	"""–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç –∫–Ω–æ–ø–æ–∫"""
	keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)


	button_1 = types.KeyboardButton(text="üí∏–ö—É–ø–∏—Ç—å –º–æ–Ω–µ—Ç—É")
	button_2 = types.KeyboardButton(text="üë§–ü—Ä–æ—Ñ–∏–ª—å")
	button_3 = types.KeyboardButton(text="üë•–†–µ—Ñ–∫–∞")
	button_4 = types.KeyboardButton(text="üßä–°—Ç–µ–π–∫–∏–Ω–≥")
	button_5 = types.KeyboardButton(text="üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
	button_6 = types.KeyboardButton(text="‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏")

	keyboard.add(button_2)
	keyboard.row(button_1,button_3)
	keyboard.row(button_4,button_5)
	keyboard.add(button_6)

	unique_code = extract_unique_code(message.text)
	if unique_code:
       #–µ—Å–ª–∏ –µ—Å—Ç—å id —Ä–µ—Ñ–µ—Ä–∞
		if(not db.subscriber_exists(message.from_user.id)):
			# –µ—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
			db.add_subscriber(message.from_user.id,unique_code)
			db.ref_update(message.from_user.id, int(unique_code))
			await bot.send_message(message.chat.id,"–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞", reply_markup = keyboard)

		else:
			# –µ—Å–ª–∏ –æ–Ω —É–∂–µ –µ—Å—Ç—å, —Ç–æ –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –µ–º—É —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
			db.update_subscription(message.from_user.id, True)
			await bot.send_message(message.chat.id,"–ü–æ–¥–ø–∏—Å–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞", reply_markup = keyboard)
	else:
       #–µ—Å–ª–∏ –≤ —Å—Å—ã–ª–∫–µ –Ω–µ—Ç id —Ä–µ—Ñ–µ—Ä–∞
		db.add_subscriber(message.from_user.id,unique_code)

		await bot.send_message(message.chat.id,"–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞", reply_markup = keyboard)


@dp.message_handler(state = None)
async def zapisat(message):
	if message.text == "üí∏–ö—É–ø–∏—Ç—å –º–æ–Ω–µ—Ç—É":
		"""–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω–æ–≤–æ–π –∫–ª–∞–≤—ã"""
		markup = types.InlineKeyboardMarkup(row_width=2)

		BTC = types.InlineKeyboardButton("BTC",callback_data = 'btc')
		USDT = types.InlineKeyboardButton("USDT",callback_data = 'usdt')
		BNB = types.InlineKeyboardButton("BNB",callback_data = 'bnb')

		markup.add(BTC,USDT,BNB)
		await bot.send_message(message.chat.id,text = '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–∫—É–ø–∫–∏ –º–æ–Ω–µ—Ç', reply_markup= markup)

	if message.text =="üë§–ü—Ä–æ—Ñ–∏–ª—å":
		"""–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç –∫–Ω–æ–ø–æ–∫"""
		keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
		bt_0 = types.KeyboardButton(text="üî•AIRDROP")
		button_1 = types.KeyboardButton(text="üí∏–î–æ–±–∞–≤–∏—Ç—å –∫–æ—à–µ–ª–µ–∫")
		button_2 = types.KeyboardButton(text="‚óÄÔ∏è–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
		button_3 = types.KeyboardButton(text="ü§ë–í—ã–≤–æ–¥")


		subscriptions = db.get_subscriptions()
		# –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –Ω–æ–≤–æ—Å—Ç—å
		for s in subscriptions:
			if s[1] == message.chat.id:
				if s[7] == None:
					keyboard.add(bt_0)
					keyboard.add(button_2,button_1)
				if s[7] != None:
					keyboard.add(bt_0)
					keyboard.add(button_2,button_3)
				await bot.send_message(
					message.chat.id,
					f' –í–∞—à ID –≤ —Ç–µ–ª–µ–≥—Ä–∞–º: {s[1]}\n–í–∞—à ID –≤ —Å–∏—Å—Ç–µ–º–µ: {s[0]}\n–î–æ—Å—Ç—É–ø–Ω–æ –º–æ–Ω–µ—Ç: {s[4]} ({float(s[4]*0.0025)}$)\n–ó–∞–º–æ—Ä–æ–∂–µ–Ω–æ –º–æ–Ω–µ—Ç: {s[5]}({float(s[5]*0.0025)}$)\n–ö–æ—à–µ–ª–µ–∫: {s[7]}',
					reply_markup= keyboard
				)       
	
	if message.text == "üí∏–î–æ–±–∞–≤–∏—Ç—å –∫–æ—à–µ–ª–µ–∫":
		await Form.addWallet.set()
		await bot.send_message (message.chat.id,f'–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å USDT trc20 –∫–æ—à–µ–ª—å–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞')

	if message.text == "ü§ë–í—ã–≤–æ–¥":

		subscriptions = db.get_subscriptions()
		# –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –Ω–æ–≤–æ—Å—Ç—å
		for s in subscriptions:
			if s[1] == message.chat.id:
				if int(s[4]) < 4000:
					await bot.send_message (message.chat.id,f'–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞')
				else:
					await Form.Vivod.set()
					await bot.send_message (message.chat.id,f'–î–ª—è –≤—ã–≤–æ–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–æ {s[4]}–º–æ–Ω–µ—Ç ({float(s[4]*0.0025)}$). –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞')

	if message.text =="üë•–†–µ—Ñ–∫–∞":
		keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

		button_1 = types.KeyboardButton(text="‚ùî–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ")
		button_2 = types.KeyboardButton(text="‚óÄÔ∏è–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
			
		keyboard.add(button_2,button_1)
		refLink = await get_start_link(payload=message.from_user.id)
		await bot.send_message(message.chat.id,f'–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: \n\n{refLink}',reply_markup=keyboard)

	if message.text == "‚ùî–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ":
		i =0
		m = 0
		subscriptions = db.get_subscriptions()
		for s in subscriptions:
			if s[6] == message.chat.id:
				i = i+1
				m = m+int(s[4])+int(s[5])
				referal = db.get_subscriptions()
				for r in referal:
					if r[6] == s[1]:
						i = i+1
						m = m+int(r[4])+int(r[5])
						last = db.get_subscriptions()
						for l in last:
							if l[6] == r[1]:
								i = i+1
								m = m+int(l[4])+int(l[5])

		await bot.send_message(message.chat.id,f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤: {i}\n\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç: {m}({float(m)*0.0025}$)')

	if message.text =="üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
		subscriptions = db.get_subscriptions()
		# –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –Ω–æ–≤–æ—Å—Ç—å
		for s in subscriptions:
			if int(s[1]) == message.chat.id:
				if s[5]!=0:
					await bot.send_message(
						message.chat.id,
						f'–í–∞—à –¥–µ–ø–æ–∑–∏—Ç: {s[5]}\n'
                    	f'–ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞ 10 –¥–Ω–µ–π: {(int(s[5])/100)*int(s[9])}\n'
                    	f'–ü—Ä–æ—Ü–µ–Ω—Ç –≤ USD: {((int(s[5])/100)*int(s[9]))*0.0025} $ '
					)  
				else:
					await bot.send_message(
						message.chat.id,
						f'–í–∞—à –¥–µ–ø–æ–∑–∏—Ç: {s[5]}\n'
					)					
	if message.text =="‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏":
		Setting = types.ReplyKeyboardMarkup(resize_keyboard=True)


		bt_1 = types.KeyboardButton(text="‚ùîFAQ")
		bt_2 = types.KeyboardButton(text="üÜò–ü–æ–¥–¥–µ—Ä–∂–∫–∞")
		bt_3 = types.KeyboardButton(text="üî•–ü—Ä–æ–µ–∫—Ç")
		bt_4 = types.KeyboardButton(text="üá¨üáß–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫")
		bt_5 = types.KeyboardButton(text="‚óÄÔ∏è–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
       	

		Setting.row(bt_1,bt_2)
		Setting.row(bt_3,bt_4)
		Setting.add(bt_5)		
		await bot.send_message(message.chat.id,text = '–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É \"–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\" —á—Ç–æ –±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥',reply_markup= Setting)

	if message.text =="‚ùîFAQ":
		await bot.send_message(message.chat.id,text = '–°–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ —á–∞—Å—Ç–æ–∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã')

	if message.text =="üÜò–ü–æ–¥–¥–µ—Ä–∂–∫–∞":
		await bot.send_message(message.chat.id,text = '–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-–Ω–∏–±—É–¥—å —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ - –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @vladiskoobilo')

	if message.text =="üá¨üáß–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫":
		await bot.send_message(message.chat.id,f'–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –≤–∞—à–µ–º —Ä–µ–≥–∏–æ–Ω–µ')
	
	if message.text =="üî•–ü—Ä–æ–µ–∫—Ç":
		await bot.send_message(message.chat.id,f'–ü—Ä–æ–µ–∫—Ç:\n\n—Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–ª–æ–∫ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã NFT –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è' 
											f'—Å —Å–æ–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º, –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å –∫–æ—Ç–æ—Ä–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∞ —Å—Ç–µ–π–∫–∏–Ω–≥–æ–º –∏ —Ä–µ–∑–µ—Ä–≤–Ω—ã–º —Ñ–æ–Ω–¥–æ–º.' 
											f'–ú—ã –ø—Ä–µ—Å–ª–µ–¥—É–µ–º —Ü–µ–ª—å —Ä–∞—Å–ø–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—à–µ–≥–æ —Ç–æ–∫–µ–Ω–∞ –∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è –∫–æ–º—å—é–Ω–∏—Ç–∏'
											f'–¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –Ω–∞ –¢–û–ü-100 –ë–∏—Ä–∂–∏. –î–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–º–∏–∫–∏ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã'
											f' –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ White Paper.'
											f'–¢–û–ö–ï–ù–´:\n\n'
											f'–ü—Ä–æ–µ–∫—Ç –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—É—é —ç–º–∏—Å—Å–∏—é –≤ 100–º–ª—Ä–¥. —Ç–æ–∫–µ–Ω–æ–≤, 10%(10–º–ª—Ä–¥.) –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ—Å—Ç–∞–≤—è—Ç'
											f'—Ä–µ–∑–µ—Ä–≤–Ω—ã–π —Ñ–æ–Ω–¥ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π. –ß–∞—Å—Ç—å —Ç–æ–∫–µ–Ω–æ–≤ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ —Ñ–æ–Ω–¥–∞ –≤ —Ä–∞–∑–º–µ—Ä–µ 10%(1–º–ª—Ä–¥.) —Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç'
											f'–Ω–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–µ–π–∫.'
											f'–ù–∞ AirDrop –ø—Ä–∏–¥–µ—Ç—Å—è 2.5%(2.5–º–ª—Ä–¥.), —Ç–∞–∫ –∂–µ –Ω–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –ø—Ä–∏–¥–µ—Ç—Å—è 12.5%(12.5–º–ª—Ä–¥.) —Ç–æ–∫–µ–Ω–æ–≤. '
											f'–ï—â–µ 10%(10–º–ª—Ä–¥.) –±—É–¥–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –¥—Ä—É–≥–∏–µ –±–ª–æ–∫–∏ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã, –∞ —Ç–∞–∫ –∂–µ 10%(10–º–ª—Ä–¥.) –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç—å '
											f'–∫–æ–º–∞–Ω–¥–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤. '
											f'–°–¢–≠–ô–ö:\n\n'
											f'–û—Å—Ç–∞–≤—à–∏–µ—Å—è 50%(50–º–ª—Ä–¥.) –±—É–¥—É—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –º–µ–∂–¥—É 3-–º—è —ç—Ç–∞–ø–∞–º–∏ —Å—Ç—ç–π–∫–∏–Ω–≥–∞ –≤ —Ä–∞–≤–Ω—ã—Ö –¥–æ–ª—è—Ö –º–µ–∂–¥—É –∫–∞–∂–¥—ã–º —ç—Ç–∞–ø–æ–º:\n\n'
											f'1-—ã–π —ç—Ç–∞–ø —Å–∞–º—ã–π –≤—ã—Å–æ–∫–æ–¥–æ—Ö–æ–¥–Ω—ã–π –∏ –≤—ã–≥–æ–¥–Ω—ã–π —Å—Ç–µ–π–∫–∏–Ω–≥, —É—Å–ª–æ–≤–∏—è —Ç–∞–∫–æ–≤—ã, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–º–æ–∂–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å '
											f'–º–æ–Ω–µ—Ç—ã –∫–æ—Ç–æ—Ä—ã–º–∏ –æ–Ω –≤–ª–∞–¥–µ–µ—Ç –Ω–∞ —Å—Ä–æ–∫ –æ—Ç 100 –¥–Ω–µ–π —Å –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å—é –æ—Ç 0.87% –≤ —Å—É—Ç–∫–∏\n\n'
											f'2-–æ–π —ç—Ç–∞–ø –º–µ–Ω–µ–µ –≤—ã–≥–æ–¥–Ω—ã–π —Å—Ç–µ–π–∫–∏–Ω–≥, –Ω–æ –±—É–¥–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –º–æ–Ω–µ—Ç—ã –Ω–∞ —Å—Ä–æ–∫ –æ—Ç 50 –¥–Ω–µ–π '
											f'—Å –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å—é –æ—Ç 0.435% –≤ —Å—É—Ç–∫–∏'
											f'3-–∏–π —ç—Ç–∞–ø –ø—Ä–∏–Ω–µ—Å–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –º–æ–Ω–µ—Ç—ã –Ω–∞ —Å—Ä–æ–∫ –æ—Ç 30 –¥–Ω–µ–π —Å –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å—é –æ—Ç 0.217% –≤ —Å—É—Ç–∫–∏'
											
											)
											
	if message.text =="üî•AIRDROP":
		keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

		button_1 = types.KeyboardButton(text="‚úÖ–ü–æ–¥–ø–∏—Å–∞–ª—Å—è")
		button_2 = types.KeyboardButton(text="‚óÄÔ∏è–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

		keyboard.add(button_1)
		keyboard.add(button_2)		
		"""–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω–æ–≤–æ–π –∫–ª–∞–≤—ã"""
		markup = types.InlineKeyboardMarkup(row_width=2)

		Y = types.InlineKeyboardButton("Telegram",url="https://t.me/NFTairDro")
		N = types.InlineKeyboardButton("Instagram",url="https://t.me/NFTairDro")

		markup.add(Y,N)
		sub = db.get_subscriptions()
		for s in sub:
			if s[1] == message.chat.id:
				if s[10] == 0:
					await bot.send_message(message.chat.id,f'–í—ã –Ω–∞—á–∞–ª–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—É –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è AIRDROP, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã–µ –Ω–∏–∂–µ —É—Å–ª–æ–≤–∏—è —á—Ç–æ –±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ',reply_markup=keyboard)
					await bot.send_message(message.chat.id,f'–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª –∏ –∏–Ω—Å—Ç–∞–≥—Ä–∞–º',reply_markup=markup)
				else:
					await bot.send_message(message.chat.id,f'–í—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ AIRDROP')

	if message.text == "‚óÄÔ∏è–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
		"""–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç –∫–Ω–æ–ø–æ–∫"""
		keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

		button_1 = types.KeyboardButton(text="üí∏–ö—É–ø–∏—Ç—å –º–æ–Ω–µ—Ç—É")
		button_2 = types.KeyboardButton(text="üë§–ü—Ä–æ—Ñ–∏–ª—å")
		button_3 = types.KeyboardButton(text="üë•–†–µ—Ñ–∫–∞")
		button_4 = types.KeyboardButton(text="üßä–°—Ç–µ–π–∫–∏–Ω–≥")
		button_5 = types.KeyboardButton(text="üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
		button_6 = types.KeyboardButton(text="‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏")

		keyboard.add(button_2)
		keyboard.row(button_1,button_3)
		keyboard.row(button_4,button_5)
		keyboard.add(button_6)

		await bot.send_message(message.chat.id,text = '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!', reply_markup=keyboard)

	if message.text =="üßä–°—Ç–µ–π–∫–∏–Ω–≥":
		subscriptions = db.get_subscriptions()
		"""–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω–æ–≤–æ–π –∫–ª–∞–≤—ã"""
		markup = types.InlineKeyboardMarkup(row_width=2)

		Y = types.InlineKeyboardButton("‚úÖ–î–∞",callback_data = 'allstatic')
		N = types.InlineKeyboardButton("‚ö†Ô∏è–ó–∞–º–æ—Ä–æ–∑–∏—Ç—å —á–∞—Å—Ç—å",callback_data = 'Nallstatic')

		markup.add(Y,N)
		for s in subscriptions:
			if s[1] == message.chat.id:
				if s[4]<20000:
					await bot.send_message(s[1],f'–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –¥–ª—è –∑–∞–º–æ—Ä–æ–∑–∫–∏, –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —Å—Ç–µ–π–∫–∏–Ω–≥–∞ - 20000')
				else:
					await bot.send_message(
						message.chat.id,
						f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–µ –¥–ª—è –∑–∞–º–æ—Ä–æ–∑–∫–∏: {s[4]}\n\n–ó–∞–º–æ—Ä–æ–∑–∏—Ç—å –≤—Å–µ ?',
						reply_markup= markup
					)

	if message.text == "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∞—Å—Å–∏–≤":
		await Form.passive.set()
		await bot.send_message(config.ADMIN, f'–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∏—Å–ª–∏—Ç—å –≤—Å–µ–º')

	if message.text =="‚úÖ–ü–æ–¥–ø–∏—Å–∞–ª—Å—è":
		mon = 0
		user_channel_status = await bot.get_chat_member(chat_id='@NFTairDro', user_id=message.from_user.id)
		user_channel_status = re.findall(r"\w*", str(user_channel_status))
		try:
			sub = db.get_subscriptions()
			for s in sub:
				if s[1] == message.chat.id:
					if s[10]==0:
						if user_channel_status[70] != 'left':
							await bot.send_message(message.chat.id,f'–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º —É—Å–ª–æ–≤–∏–π! –ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –Ω–∞—á–∏—Å–ª–µ–Ω–æ 10$ –≤ —ç–≤–∏–≤–∞–ª–µ–Ω—Ç–µ 4000 –º–æ–Ω–µ—Ç')
							sub = db.get_subscriptions()
							for s in sub:
								if s[1] == message.chat.id:
									mon = float(s[4])+4000
									db.token_update(message.chat.id,mon)
									db.up_air(s[1],1)
						else:
							await bot.send_message(message.chat.id,f'–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–µ –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã')
							#–£—Å–ª–æ–≤–∏–µ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω
					else:
						await bot.send_message(message.chat.id,f'–í—ã —É–∂–µ –∑–∞–±—Ä–∞–ª–∏ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ')
		except:
			sub = db.get_subscriptions()
			for s in sub:
				if s[1] == message.chat.id:
					if s[10]==0:
						if user_channel_status[60] != 'left':
							await bot.send_message(message.chat.id,f'–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º —É—Å–ª–æ–≤–∏–π! –ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –Ω–∞—á–∏—Å–ª–µ–Ω–æ 10$ –≤ —ç–≤–∏–≤–∞–ª–µ–Ω—Ç–µ 4000 –º–æ–Ω–µ—Ç')
							sub = db.get_subscriptions()
							for s in sub:
								if s[1] == message.chat.id:
									mon = float(s[4])+4000
									db.token_update(message.chat.id,mon)
									db.up_air(s[1],1)
						else:
							await bot.send_message(message.from_user.id, f'–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–µ –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã')
							#–£—Å–ª–æ–≤–∏–µ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω
					else:
						await bot.send_message(message.chat.id,f'–í—ã —É–∂–µ –∑–∞–±—Ä–∞–ª–∏ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ')
	if message.text =="*#Adm1nn":
		keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

		button_1 = types.KeyboardButton(text="!‚Ññ–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∞—Å—Å–∏–≤")

		keyboard.add(button_1)

		await bot.send_message(message.chat.id,f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤–∞—Å –Ω–∞–∑–Ω–∞—á–∏–ª–∏ –∞–¥–º–∏–Ω–æ–º!', reply_markup=keyboard)
	if message.text == "–û—Ç–ø—Ä–∞–≤–∏–ª":
		keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

		button_1 = types.KeyboardButton(text="üí∏–ö—É–ø–∏—Ç—å –º–æ–Ω–µ—Ç—É")
		button_2 = types.KeyboardButton(text="üë§–ü—Ä–æ—Ñ–∏–ª—å")
		button_3 = types.KeyboardButton(text="üë•–†–µ—Ñ–∫–∞")
		button_4 = types.KeyboardButton(text="üßä–°—Ç–µ–π–∫–∏–Ω–≥")
		button_5 = types.KeyboardButton(text="üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
		button_6 = types.KeyboardButton(text="‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏")

		keyboard.add(button_2)
		keyboard.row(button_1,button_3)
		keyboard.row(button_4,button_5)
		keyboard.add(button_6)

		await bot.send_message(message.chat.id,f'–û–∂–∏–¥–∞–π—Ç–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤!',reply_markup=keyboard)
async def up_balance(wait):
	while True:
		subscribtions = db.get_subscriptions()
		for s in subscribtions:
			id = s[1]
			sub = db.get_subscriptions()
			for s in sub:
				if s[6] == id:
					if int(s[8])!= 1:
						if int(s[4]) == 0:
							pass
						else:
							await bot.send_message(id,f'–ó–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –∏–∑ –ø–µ—Ä–≤–æ–π –ª–∏–Ω–∏–∏ –≤–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ: {(float(s[4])/100)*7} ({((float(s[4])/100)*7)*0.0025}$)')
							db.update_Vozn(s[1], 1)
							money = (float(s[4])/100)*7
							up = db.get_subscriptions()
							for u in up:
								if u[1] == id:
									money = float(u[4])+money
									db.token_update(u[1],money)

			for s in sub:
				if s[6] == id:
					for sec in sub:
						if sec[6] == s[1]:
							if int(sec[8]) != 1:
								if int(sec[4]) == 0:
									pass
								else:
									await bot.send_message(id,f'–ó–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –≤–æ –≤—Ç–æ—Ä–æ–π –ª–∏–Ω–∏–∏ –≤–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ: {(float(sec[4])/100)*4} ({((float(sec[4])/100)*4)*0.0025}$)')
									db.update_Vozn(sec[1],1)
									money = (float(sec[4]/100)*4)
									upd = db.get_subscriptions()
									for u in upd:
										if u[1] == id:
											money = float(u[4])+money
											db.token_update(id,money)	

			for s in sub:
				if s[6] == id:
					for sec in sub:
						if sec[6] == s[1]:
							for th in sub:
								if th[6] == sec[1]:
									if int(th[8])!=1:
										if int(th[4]) == 0:
											pass
										else:
											await bot.send_message(id,f'–ó–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –≤ —Ç—Ä–µ—Ç—å–µ–π –ª–∏–Ω–∏–∏ –≤–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ: {float(th[4]/100)*1} ({(float(th[4]/100)*1*0.0025)}$)')
											db.update_Vozn(th[1],1)
											money = (float(th[4]/100)*1)
											upd = db.get_subscriptions()
											for u in upd:
												if u[1] == id:
													money = float(u[4])+money
													db.token_update(id,money)
		await asyncio.sleep(wait)

@dp.callback_query_handler()
async def approve(call) :
	global number
	global usid
	global money
	global stack

	if call.data == 'btc' :
		await Form.BTCpay.set()
		await bot.send_message(call.message.chat.id,text = '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏(–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–∫—É–ø–∫–∏ 20000 –º–æ–Ω–µ—Ç –∏–ª–∏ 50$)\n\n –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –∞–¥–º–∏–Ω –æ–¥–æ–±—Ä–∏—Ç –≤–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–∫—É–ø–∫—É –≤–∞–º –ø—Ä–∏–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞–¥—Ä–µ—Å–æ–º –¥–ª—è –æ–ø–ª–∞—Ç—ã')
       
	if call.data == 'yBTC' :

		"""–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω–æ–≤–æ–π –∫–ª–∞–≤—ã"""
		markup = types.InlineKeyboardMarkup(row_width=2)

		Y = types.InlineKeyboardButton("‚úÖ–î–æ—à–ª–∏",callback_data = 'ypay')
		N = types.InlineKeyboardButton("‚ö†Ô∏è–ù–µ –¥–æ—à–ª–∏",callback_data = 'npay')

		markup.add(Y,N)

		await bot.send_message(config.ADMIN,f'–ù–∞ –∫–æ—à–µ–ª–µ–∫ BTC –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {money}$, —Å—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—á–∏—Å–ª–µ–Ω—ã? ', reply_markup=markup)
		keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

		button_1 = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏–ª")

		keyboard.add(button_1)
		await bot.send_message(usid,f'–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É –º–æ–Ω–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–∞!–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ {money}$ –Ω–∞ –∞–¥—Ä–µ—Å—Å:\n\nbc1qtgn77auks42zknf8gtm7rr0c4pqvfrtlhkgxwt')
		
		await bot.send_message(usid,f'–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É \"–û–¢–ü–†–ê–í–ò–õ\" –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏', reply_markup= keyboard)


	if call.data == 'nBTC' :
		await bot.send_message(usid,text = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–µ –æ–¥–æ–±—Ä–µ–Ω–∞, —É—Ç–æ—á–Ω–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É —É –Ω–∞—à–µ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏')

	if call.data == 'usdt' :
		await Form.USDTpay.set()
		await bot.send_message(call.message.chat.id,text = '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏(–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–∞–∞ –ø–æ–∫—É–ø–∫–∏ 20000 –º–æ–Ω–µ—Ç –∏–ª–∏ 50$)\n\n –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –∞–¥–º–∏–Ω –æ–¥–æ–±—Ä–∏—Ç –≤–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–∫—É–ø–∫—É –≤–∞–º –ø—Ä–∏–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞–¥—Ä–µ—Å–æ–º –¥–ª—è –æ–ø–ª–∞—Ç—ã')
       
	if call.data == 'yUSDT' :
		
		"""–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω–æ–≤–æ–π –∫–ª–∞–≤—ã"""
		markup = types.InlineKeyboardMarkup(row_width=2)

		Y = types.InlineKeyboardButton("‚úÖ–î–æ—à–ª–∏",callback_data = 'ypay')
		N = types.InlineKeyboardButton("‚ö†Ô∏è–ù–µ –¥–æ—à–ª–∏",callback_data = 'npay')

		markup.add(Y,N)

		await bot.send_message(config.ADMIN,f'–ù–∞ –∫–æ—à–µ–ª–µ–∫ BTC –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {money}$, —Å—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—á–∏—Å–ª–µ–Ω—ã? ', reply_markup=markup)
		
		keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

		button_1 = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏–ª")

		keyboard.add(button_1)

		await bot.send_message(usid,f'–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É –º–æ–Ω–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–∞! –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ {money}$ –Ω–∞ –∞–¥—Ä–µ—Å—Å:\n\nTDFFzjL1AuVR4XnSjPgAvj9frLEPwHAq9r')

		await bot.send_message(usid,f'–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É \"–û–¢–ü–†–ê–í–ò–õ\" –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏', reply_markup= keyboard)
		
	if call.data == 'nUSDT' :
		await bot.send_message(usid,text = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–µ –æ–¥–æ–±—Ä–µ–Ω–∞, —É—Ç–æ—á–Ω–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É —É –Ω–∞—à–µ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏')

	if call.data == 'bnb' :
		await Form.BNBpay.set()
		await bot.send_message(call.message.chat.id,text = '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏(–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–∞–∞ –ø–æ–∫—É–ø–∫–∏ 20000 –º–æ–Ω–µ—Ç –∏–ª–∏ 50$)\n\n –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –∞–¥–º–∏–Ω –æ–¥–æ–±—Ä–∏—Ç –≤–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–∫—É–ø–∫—É –≤–∞–º –ø—Ä–∏–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞–¥—Ä–µ—Å–æ–º –¥–ª—è –æ–ø–ª–∞—Ç—ã')
       
	if call.data == 'yBNB' :
		
		"""–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω–æ–≤–æ–π –∫–ª–∞–≤—ã"""
		markup = types.InlineKeyboardMarkup(row_width=2)

		Y = types.InlineKeyboardButton("‚úÖ–î–æ—à–ª–∏",callback_data = 'ypay')
		N = types.InlineKeyboardButton("‚ö†Ô∏è–ù–µ –¥–æ—à–ª–∏",callback_data = 'npay')

		markup.add(Y,N)

		await bot.send_message(config.ADMIN,f'–ù–∞ –∫–æ—à–µ–ª–µ–∫ BTC –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {money}$, —Å—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—á–∏—Å–ª–µ–Ω—ã? ', reply_markup=markup)
		
		keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

		button_1 = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏–ª")

		keyboard.add(button_1)
		await bot.send_message(usid,f'–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É –º–æ–Ω–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–∞! –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ {money}$ –Ω–∞ –∞–¥—Ä–µ—Å—Å:\n\nbnb13cn9ghfgur4s34mcdk25t36jxqjt2aw3tgefxz')
		await bot.send_message(usid,f'–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É \"–û–¢–ü–†–ê–í–ò–õ\" –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏', reply_markup= keyboard)
		
	if call.data == 'nBNB' :
		await bot.send_message(usid,text = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–µ –æ–¥–æ–±—Ä–µ–Ω–∞, —É—Ç–æ—á–Ω–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É —É –Ω–∞—à–µ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏')


	if call.data == 'ypay' :
		"""–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç –∫–Ω–æ–ø–æ–∫"""
		keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

		button_1 = types.KeyboardButton(text="üí∏–ö—É–ø–∏—Ç—å –º–æ–Ω–µ—Ç—É")
		button_2 = types.KeyboardButton(text="üë§–ü—Ä–æ—Ñ–∏–ª—å")
		button_3 = types.KeyboardButton(text="üë•–†–µ—Ñ–∫–∞")
		button_4 = types.KeyboardButton(text="üßä–°—Ç–µ–π–∫–∏–Ω–≥")
		button_5 = types.KeyboardButton(text="üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
		button_6 = types.KeyboardButton(text="‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏")

		keyboard.add(button_2)
		keyboard.row(button_1,button_3)
		keyboard.row(button_4,button_5)
		keyboard.add(button_6)
		subscriptions = db.get_subscriptions()
		for s in subscriptions:
			if s[1] == usid:
				number = s[4]
		await bot.send_message(usid,text = '–ü–µ—Ä–µ–≤–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω! –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ—Ç –≤–∞—Å —Å –ø–æ–∫—É–ø–∫–æ–π —Ç–æ–∫–µ–Ω–∞! –ú–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –ø—Ä–æ—Ñ–∏–ª–µ!',reply_markup=keyboard)
        #—Ç—É—Ç –¥–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–Ω–µ—Å–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –º–æ–Ω–µ—Ç –≤ –±–¥ 
		money = float(money)/0.0025
		money = int(money) + number
		db.token_update(usid,money)

	if call.data == 'npay' :
		"""–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç –∫–Ω–æ–ø–æ–∫"""
		keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

		button_1 = types.KeyboardButton(text="üí∏–ö—É–ø–∏—Ç—å –º–æ–Ω–µ—Ç—É")
		button_2 = types.KeyboardButton(text="üë§–ü—Ä–æ—Ñ–∏–ª—å")
		button_3 = types.KeyboardButton(text="üë•–†–µ—Ñ–∫–∞")
		button_4 = types.KeyboardButton(text="üßä–°—Ç–µ–π–∫–∏–Ω–≥")
		button_5 = types.KeyboardButton(text="üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
		button_6 = types.KeyboardButton(text="‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
		keyboard.add(button_2)
		keyboard.row(button_1,button_3)
		keyboard.row(button_4,button_5)
		keyboard.add(button_6)
		await bot.send_message(usid,text = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤–∞—à–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–µ –¥–æ—à–ª–∏! –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è —Å–∏—Ç—É–∞—Ü–∏–∏',reply_markup=keyboard)


	if call.data == 'allstatic' :
		subscriptions = db.get_subscriptions()
		for s in subscriptions:
			if s[1] == call.message.chat.id:
				number = s[4]
				stack = s[5]
		stack = number+stack
		number = 0
		db.token_update(call.message.chat.id, number)
		db.stack_update(call.message.chat.id, stack)
		await bot.send_message(call.message.chat.id,f'–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–º –º–æ–Ω–µ—Ç—ã –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –≤ —Å—Ç–µ–π–∫–∏–Ω–≥! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!')

	if call.data == 'Nallstatic' :
		usid = call.message.chat.id
		await Form.Nall_freez.set()
		await bot.send_message(call.message.chat.id,f'–û—Ç–ø–∞—Ä–≤—å—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –∫–æ—Ç–æ—Ä–æ–µ –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –∑–∞–º–æ—Ä–æ–∑–∏—Ç—å(–º–∏–Ω–∏–º—É–º 20000 —Ç–æ–∫–µ–Ω–æ–≤) ')

	if call.data == 'yViv' :
		subscriptions = db.get_subscriptions()

		for s in subscriptions:
			if s[1] == usid:
				number = s[4]
		money = number - int(money)
		db.token_update(usid,money)
		await bot.send_message(usid,text = '–°—Ä–µ–¥—Å—Ç–≤–∞ –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –≤–∞—à –∫–æ—à–µ–ª–µ–∫! –û–∂–∏–¥–∞–π—Ç–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è!')

	if call.data == 'nViv' :
		subscriptions = db.get_subscriptions()

		for s in subscriptions:
			if s[1] == usid:
				await bot.send_message(usid,text = '–í –∑–∞—è–≤–∫–µ –Ω–∞ –≤—ã–≤–æ–¥ –±—ã–ª–æ –æ—Ç–∫–∞–∑–∞–Ω–æ, —É—Ç–æ—á–Ω–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É —É –ø–æ–¥–¥–µ—Ä–∂–∫–∏')


		     
"""–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É –≤ –±–∏—Ç–∫–µ"""
@dp.message_handler(state = Form.BTCpay)
async def Bitcoin_payments(message: types.Message, state: FSMContext):
	global money
	global usid
	money = message.text
	usid = message.chat.id
	if float(money)<20000:
		await bot.send_message(message.chat.id, f'–°—É–º–º–∞ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π. –°–æ—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ç–æ–∫–µ–Ω–æ–≤ –æ—Ç 20000')
		await state.finish()
	if float(money)>=20000:
		"""–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω–æ–≤–æ–π –∫–ª–∞–≤—ã"""
		markup = types.InlineKeyboardMarkup(row_width=2)

		Y = types.InlineKeyboardButton("‚úÖ–û–¥–æ–±—Ä–∏—Ç—å",callback_data = 'yBTC')
		N = types.InlineKeyboardButton("‚ö†Ô∏è–ó–∞–ø—Ä–µ—Ç–∏—Ç—å",callback_data = 'nBTC')

		markup.add(Y,N)
		money = float(money)*0.0025
		await state.finish()
		await bot.send_message(config.ADMIN,f'–ó–ê–Ø–í–ö–ê –ù–ê –ü–û–ö–£–ü–ö–£\n\n–§–ò–û –ø–æ–∫—É–ø–∞—Ç–µ–ª—è: –§–ò–û –∏–∑ –ë–î\n\n–í–∞–ª—é—Ç–∞ –æ–ø–ª–∞—Ç—ã: BTC\n\n–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {money}$', reply_markup=markup)
		
@dp.message_handler(state = Form.USDTpay)
async def USDT_payments(message: types.Message, state: FSMContext):
	global money
	global usid
	money = message.text
	usid = message.chat.id
	if float(money)<20000:
		await bot.send_message(message.chat.id, f'–°—É–º–º–∞ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –º–µ–Ω—å—à–µ	 –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π. –°–æ—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ç–æ–∫–µ–Ω–æ–≤ –æ—Ç 20000')
		await state.finish
	if float(money)>=20000:
		"""–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω–æ–≤–æ–π –∫–ª–∞–≤—ã"""
		markup = types.InlineKeyboardMarkup(row_width=2)

		Y = types.InlineKeyboardButton("‚úÖ–û–¥–æ–±—Ä–∏—Ç—å",callback_data = 'yUSDT')
		N = types.InlineKeyboardButton("‚ö†Ô∏è–ó–∞–ø—Ä–µ—Ç–∏—Ç—å",callback_data = 'nUSDT')

		markup.add(Y,N)
		money = float(money)*0.0025
		await bot.send_message(config.ADMIN,f'–ó–ê–Ø–í–ö–ê –ù–ê –ü–û–ö–£–ü–ö–£\n\n–§–ò–û –ø–æ–∫—É–ø–∞—Ç–µ–ª—è: –§–ò–û –∏–∑ –ë–î\n\n–í–∞–ª—é—Ç–∞ –æ–ø–ª–∞—Ç—ã: USDT\n\n–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {money}$', reply_markup=markup)
		await state.finish()

"""–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ USDT"""
@dp.message_handler(state = Form.CheckUSDTpay)
async def USDT_payments(message: types.Message, state: FSMContext):
	global money
	global usid

	"""–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω–æ–≤–æ–π –∫–ª–∞–≤—ã"""
	markup = types.InlineKeyboardMarkup(row_width=2)

	Y = types.InlineKeyboardButton("‚úÖ–î–æ—à–ª–∏",callback_data = 'ypay')
	N = types.InlineKeyboardButton("‚ö†Ô∏è–ù–µ –¥–æ—à–ª–∏",callback_data = 'npay')

	markup.add(Y,N)

	await bot.send_message(config.ADMIN,f'–ù–∞ –∫–æ—à–µ–ª–µ–∫ USDT –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {money}$, —Å—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—á–∏—Å–ª–µ–Ω—ã? ', reply_markup=markup)
	await state.finish()

@dp.message_handler(state = Form.BNBpay)
async def BNB_payments(message: types.Message, state: FSMContext):
	global money
	global usid
	money = message.text
	usid = message.chat.id
	if float(money)<20000:
		await bot.send_message(message.chat.id, f'–°—É–º–º–∞ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π. –°–æ—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ç–æ–∫–µ–Ω–æ–≤ –æ—Ç 20000')
		await state.finish
	if float(money)>=20000:
		"""–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω–æ–≤–æ–π –∫–ª–∞–≤—ã"""
		markup = types.InlineKeyboardMarkup(row_width=2)

		Y = types.InlineKeyboardButton("‚úÖ–û–¥–æ–±—Ä–∏—Ç—å",callback_data = 'yBNB')
		N = types.InlineKeyboardButton("‚ö†Ô∏è–ó–∞–ø—Ä–µ—Ç–∏—Ç—å",callback_data = 'nBNB')

		markup.add(Y,N)
		money = float(money)*0.0025
		await bot.send_message(config.ADMIN,f'–ó–ê–Ø–í–ö–ê –ù–ê –ü–û–ö–£–ü–ö–£\n\n–§–ò–û –ø–æ–∫—É–ø–∞—Ç–µ–ª—è: –§–ò–û –∏–∑ –ë–î\n\n–í–∞–ª—é—Ç–∞ –æ–ø–ª–∞—Ç—ã: BNB\n\n–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {money}$', reply_markup=markup)
		await state.finish()

"""–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ BNB"""
@dp.message_handler(state = Form.CheckBNBpay)
async def BNB_payments(message: types.Message, state: FSMContext):
	global money
	global usid

	"""–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω–æ–≤–æ–π –∫–ª–∞–≤—ã"""
	markup = types.InlineKeyboardMarkup(row_width=2)

	Y = types.InlineKeyboardButton("‚úÖ–î–æ—à–ª–∏",callback_data = 'ypay')
	N = types.InlineKeyboardButton("‚ö†Ô∏è–ù–µ –¥–æ—à–ª–∏",callback_data = 'npay')

	markup.add(Y,N)

	await bot.send_message(config.ADMIN,f'–ù–∞ –∫–æ—à–µ–ª–µ–∫ BNB –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {money}$, —Å—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—á–∏—Å–ª–µ–Ω—ã? ', reply_markup=markup)
	await state.finish()

"""–î–æ–±–∞–≤–ª–µ–Ω–∏–µ USDT trc20 –∫–æ—à–µ–ª—å–∫–∞"""
@dp.message_handler(state = Form.addWallet)
async def BNB_payments(message: types.Message, state: FSMContext):
	global wallet
	wallet = message.text
	db.add_wallet(message.from_user.id, wallet)
	await bot.send_message(message.chat.id,f'–ö–æ—à–µ–ª–µ–∫ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤ –¥–æ–±–∞–≤–ª–µ–Ω!')

	await state.finish()

"""–í—ã–≤–æ–¥ –º–æ–Ω–µ—Ç"""
@dp.message_handler(state = Form.Vivod)
async def BNB_payments(message: types.Message, state: FSMContext):
	global money
	global usid
	money = message.text
	usid = message.chat.id
	if int(money)<4000:
		await bot.send_message(usid,f'–í—ã–≤–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –æ—Ç 4000 –º–æ–Ω–µ—Ç (10$), –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É')
		await Form.Vivod.set()
	else:
		await bot.send_message(usid,f'–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ —Å–æ–∑–¥–∞–Ω–∞, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –æ–¥–æ–±—Ä–∏—Ç –∑–∞—è–≤–∫—É –≤–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!')

		"""–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω–æ–≤–æ–π –∫–ª–∞–≤—ã"""
		markup = types.InlineKeyboardMarkup(row_width=2)

		Y = types.InlineKeyboardButton("‚úÖ–û–¥–æ–±—Ä–µ–Ω–∞",callback_data = 'yViv')
		N = types.InlineKeyboardButton("‚ö†Ô∏è–û—Ç–∫–∞–∑–∞–Ω–æ",callback_data = 'nViv')

		markup.add(Y,N)
		subscriptions = db.get_subscriptions()
		for s in subscriptions:
			if s[1] == usid:
				wallet = s[7]
	#–í–≤–µ—Å—Ç–∏ id –∞–¥–º–∏–Ω–∞
		await bot.send_message(config.ADMIN,f'–ó–ê–Ø–í–ö–ê –ù–ê –í–´–í–û–î:\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞:{money}\n–ö–æ—à–µ–ª–µ–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:\n\n {wallet}',reply_markup=markup)

		await state.finish()


@dp.message_handler(state = Form.Nall_freez)
async def some_freez(message: types.Message, state: FSMContext):
	global money_freez
	global usid
	money_freez = message.text
	st_d = 0
	subscriptions = db.get_subscriptions()
	if int(money_freez) < 20000:
		await bot.send_message(message.chat.id,f'–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É, —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∑–∞–π–≤–∫—É –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥ –º–æ–Ω–µ—Ç –≤ —Å—Ç–µ–π–∫–∏–Ω–≥(–º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –¥–ª—è –∑–∞–º–æ—Ä–æ–∑–∫–∏ 20000)')
	else:
		for s in subscriptions:
			if s[1] == usid:
				m = s[4]
				st = s[5]
				st_d = int(st)+ int(money_freez)
				money_fre = int(m) - int(money_freez)
				db.token_update(s[1],money_fre)
				db.stack_update(s[1],st_d)
		await bot.send_message(usid,f'–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ú–æ–Ω–µ—Ç—ã –∑–∞–º–æ—Ä–æ–∂–µ–Ω—ã!')

	await state.finish()

@dp.message_handler(state = Form.passive)
async def some_freez(message: types.Message, state: FSMContext):
	pr = message.text
	sub = db.get_subscriptions()
	for s in sub:
		if float(s[5]) == 0:
			pass
		else:
			await bot.send_message(s[1],f'–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ –≤ —Ä–∞–∑–º–µ—Ä–µ {float(s[5])/100 * float(pr)}')
			money = s[4]+float(s[5])/100*float(pr)
			db.token_update(s[1], money)
			db.set_pass(s[1],int(pr))
	await state.finish()


# –∑–∞–ø—É—Å–∫–∞–µ–º –ª–æ–Ω–≥ –ø–æ–ª–ª–∏–Ω–≥
if __name__ == '__main__':
	try:
		loop = asyncio.get_event_loop()
		loop.create_task(up_balance(10))
		executor.start_polling(dp, skip_updates=True)
	except:
		aiogram.utils.exceptions.BotBlocked	